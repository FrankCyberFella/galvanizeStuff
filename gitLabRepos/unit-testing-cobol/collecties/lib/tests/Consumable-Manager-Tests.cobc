       Identification Division.
       Program-id. Consumable-Manager-Tests.
      
       Data Division.
       Working-Storage Section.
      *>**************************************************************
      *> Define any data needed by the program you are testing
      *> that will be sent as parameters here
      *>**************************************************************
      
       01  mock-random-int PIC 999.


      *>**************************************************************
      *> Copybook with Fields required/used by Test Suite Template
      *> Fields will be set by GUnit and used however the programmer
      *> deems necessary for thier test processing 
      *>**************************************************************  
       copy 'TSFields'.

      *>**************************************************************
      *> Copybook with Fields required/used by GUnit
      *> Fields will be set by the caller and returned by GUnit 
      *>**************************************************************
       copy 'GUnitFld'.    
       
       Procedure Division.

           Perform Run-Tests Thru Run-Tests-Exit.      
           Perform TS-Show-Results.
           Goback.
       
       *>************************************************************** 
       Run-Tests.
       *>************************************************************** 
      
       TEST-GET-RANDOM-CONSUMABLE-PIZZA.
           move 'Get a random consumable - pizza' to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-CONSUMABLES'.
           move 'Small Pizza with Dodud Sausage (4)' 
               to GU-Expected-Value-String.
           move 1 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           
           *> Act    
           call 'GET-RANDOM-CONSUMABLE' using GU-Actual-Value-String.
           
           *> Assert 
           Perform GU-Assert-String-Equals.

       TEST-GET-RANDOM-CONSUMABLE-ENERGY-DRINK.
           move 'Get a random consumable - energy drink' 
               to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-CONSUMABLES'.
           move 'Rextore Claws Energy Drink (1)' 
               to GU-Expected-Value-String.
           move 2 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           
           
           *> Act    
           call 'GET-RANDOM-CONSUMABLE' using GU-Actual-Value-String.
           
           *> Assert 
           Perform GU-Assert-String-Equals.

       TEST-GET-CONSUMABLES-NONE.
           MOVE 'GET-CONSUMABLES-NONE' to TS-Test-Description.
           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-CONSUMABLES'.
           move spaces to GU-Expected-Value-String.

           *> Act    
           call 'GET-CONSUMABLES' using GU-Actual-Value-String.
           
           *> Assert 
           Perform GU-Assert-String-Equals.

       TEST-GET-CONSUMABLES-ONE.
           MOVE 'GET-CONSUMABLES-ONE' to TS-Test-Description.
           
           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-CONSUMABLES'.
           
           move 1 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           call 'GET-RANDOM-CONSUMABLE' using GU-Actual-Value-String.
           call 'GET-CONSUMABLES' using GU-Actual-Value-String.
           STRING 
               '[1] Small Pizza with Dodud Sausage (4)' 
                 X'0A'
               INTO GU-Expected-Value-String.

           *> Assert 
           Perform GU-Assert-String-Equals.

       TEST-GET-CONSUMABLES-TWO.
           MOVE 'GET-CONSUMABLES-TWO' to TS-Test-Description.
           call 'INIT-CONSUMABLES'.
           call 'GET-CONSUMABLES' using GU-Actual-Value-String.
           move 1 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           call 'GET-RANDOM-CONSUMABLE' using GU-Actual-Value-String.
           move 2 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           call 'GET-RANDOM-CONSUMABLE' using GU-Actual-Value-String.
           call 'GET-CONSUMABLES' using GU-Actual-Value-String.
           STRING 
               '[1] Small Pizza with Dodud Sausage (4)' 
               X'0A'
               '[2] Rextore Claws Energy Drink (1)'
               X'0A' 
               INTO GU-Expected-Value-String.
           
           *> Assert 
           Perform GU-Assert-String-Equals.

      *>*************************************************************** 
       Run-Tests-Exit.
           exit.
      *>*************************************************************** 
       
      *>****************************************************************
      *> COPY Test Suite Features Desired/Used before end of program
      *>****************************************************************
       copy 'TSGUAEQN'. *> Assert Equals Numeric
       copy 'TSGUANEN'. *> Assert NotEquals Numeric
       copy 'TSGUAEQS'. *> Assert Equals String
       copy 'TSGUANES'. *> Assert NotEquals String
       copy 'TSShow'.   *> Test Suit Display Results
       copy 'GUInit'.   *> GUnit Initialize to Defaults

       end program Consumable-Manager-Tests.

      *>****************************************************************
      *> COPY program code to be tested AFTER end of Test Suite Program
      *>****************************************************************      
       copy 'GUnitV3'.
      
      *>****************************************************************
      *> COPY program code to be tested AFTER end of Test Suite Program
      *>****************************************************************
       copy 'lib/programs/Consumable-Manager'.
       copy 'lib/tests/Mock-Randomizer'.


      