       Identification Division.
       Program-id. Dodud-Tests.
      
       Data Division.
       Working-Storage Section.
      *>**************************************************************
      *> Define any data needed by the program you are testing
      *> that will be sent as parameters here
      *>**************************************************************
      
       01  COLLECTIE-ID PIC 99 VALUE ZERO.
       01  CLONE-ID PIC 99 VALUE ZERO.
       01  mock-random-int PIC 999.
       
       REPLACE ==DODUD== BY ==TEST-DODUD-A==.
       copy "lib/Dodud.cpy".

       REPLACE ==DODUD== BY ==TEST-DODUD-B==.
       copy "lib/Dodud.cpy".


      *>**************************************************************
      *> Copybook with Fields required/used by Test Suite Template
      *> Fields will be set by GUnit and used however the programmer
      *> deems necessary for thier test processing 
      *>**************************************************************  
       copy 'TSFields'.

      *>**************************************************************
      *> Copybook with Fields required/used by GUnit
      *> Fields will be set by the caller and returned by GUnit 
      *>**************************************************************
       copy 'GUnitFld'.    
       
       Procedure Division.

           Perform Run-Tests Thru Run-Tests-Exit.      
           Perform TS-Show-Results.
           Goback.
       
       *>************************************************************** 
       Run-Tests.
       *>************************************************************** 

       TEST-CREATE.
           move 'Check creation alt' to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-COLLECTIES'.
           move 123 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-A.

           *> Assert name
           move 'Dodud 123' to GU-Expected-Value-String.
           move collectie-name of TEST-DODUD-A 
             to GU-Actual-Value-String.

           *> Assert     
           Perform GU-Assert-String-Equals.
           
           *> Assert sound
           move 'dooooo-up' to GU-Expected-Value-String.
           move sound of TEST-DODUD-A to GU-Actual-Value-String.    
           Perform GU-Assert-String-Equals.

           *> Assert preferred biome
           move 'PLAINS' to GU-Expected-Value-String.
           move PREFERRED-BIOME of TEST-DODUD-A 
             to GU-Actual-Value-String.    
           Perform GU-Assert-String-Equals.

           *> Assert species
           move 'Dodud' to GU-Expected-Value-String.
           move species of TEST-DODUD-A to GU-Actual-Value-String.    
           Perform GU-Assert-String-Equals.

           *> Assert type
           move 'SPECIAL' to GU-Expected-Value-String.
           move collectie-type of TEST-DODUD-A 
             to GU-Actual-Value-String.    
           Perform GU-Assert-String-Equals.

           *> Assert Attack
           move 0 to GU-Expected-Value-Numeric.
           move attack-power of TEST-DODUD-A to GU-Actual-Value-Numeric.
           Perform GU-Assert-Numeric-Equal.

           *> Assert Defend Floor
           move 100 to GU-Expected-Value-Numeric.
           move defend-floor of TEST-DODUD-A to GU-Actual-Value-Numeric.
           Perform GU-Assert-Numeric-Equal.


       TEST-CREATE-MULTIPLES.
           move 'Check creation of multiple' to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           call 'INIT-COLLECTIES'.
           move 123 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           move 'Dodud 123' to GU-Expected-Value-String.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-A.
           move collectie-name of TEST-DODUD-A 
             to GU-Actual-Value-String.

           *> Assert     
           Perform GU-Assert-String-Equals.

           *> Arrange
           move 456 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           move 'Dodud 456' to GU-Expected-Value-String.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-B.
           move collectie-name of TEST-DODUD-B 
             to GU-Actual-Value-String.
           
           *> Assert     
           Perform GU-Assert-String-Equals.

       
       TEST-DEFEND-FAIL-UNDER.
           move 'Should always fail to defend under' 
             to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           move 49 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           
           move 0 to GU-Expected-Value-Numeric.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-A.
           call 'DEFEND' 
             using TEST-DODUD-A, GU-Actual-Value-Numeric.
           
           *> Assert     
           Perform GU-Assert-Numeric-Equal.

       
       TEST-DEFEND-FAIL-OVER.
           move 'Should always fail to defend over' 
             to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           move 50 to mock-random-int.
           call 'set-random-int' using mock-random-int.
           
           move 0 to GU-Expected-Value-Numeric.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-A.
           call 'DEFEND' 
             using TEST-DODUD-A, GU-Actual-Value-Numeric.
           
           *> Assert     
           Perform GU-Assert-Numeric-Equal.

       
       TEST-CLONE.
           move 'should clone new instance with same values' 
             to TS-Test-Description.

           *> Arrange
           perform GU-Initialize-Default-Values.
           
           *> Act    
           call 'ADD-DODUD' using TEST-DODUD-A.
           call 'CLONE' 
             using TEST-DODUD-A, TEST-DODUD-B.

           *> Assert Name matches 
           move collectie-name of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move collectie-name of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert Type matches 
           move collectie-type of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move collectie-type of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert sound matches 
           move sound of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move sound of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert species matches 
           move species of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move species of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert Preferred Biome matches 
           move preferred-biome of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move preferred-biome of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert Attack Power matches 
           move attack-power of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move attack-power of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert defend floor matches 
           move defend-floor of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move defend-floor of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.

           *> Assert graphic matches 
           move graphic of TEST-DODUD-A 
             to GU-Expected-Value-String. 
           move graphic of TEST-DODUD-B 
             to GU-Actual-Value-String.   
           Perform GU-Assert-String-Equals.


      *>*************************************************************** 
       Run-Tests-Exit.
           exit.
      *>*************************************************************** 
       
      *>****************************************************************
      *> COPY Test Suite Features Desired/Used before end of program
      *>****************************************************************
       copy 'TSGUAEQN'. *> Assert Equals Numeric
       copy 'TSGUANEN'. *> Assert NotEquals Numeric
       copy 'TSGUAEQS'. *> Assert Equals String
       copy 'TSGUANES'. *> Assert NotEquals String
       copy 'TSShow'.   *> Test Suit Display Results
       copy 'GUInit'.   *> GUnit Initialize to Defaults

       end program Dodud-Tests.

      *>****************************************************************
      *> COPY program code to be tested AFTER end of Test Suite Program
      *>****************************************************************      
       copy 'GUnitV3'.
      
      *>****************************************************************
      *> COPY program code to be tested AFTER end of Test Suite Program
      *>****************************************************************
       copy 'lib/programs/Collectie-Manager'.
       copy 'lib/tests/Mock-Randomizer'.


      